<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      'f31eb479bf30f04ca3ea0effd0d710ac' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":0,"property_preprocess":0,"name":"Personalize","description":"Snippet to show different chunks to logged-in- and not-logged-in users.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\r\\n * Personalize snippet for MODx Revolution\\r\\n *\\r\\n * Personalize is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Personalize is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Personalize; if not, write to the Free Software Foundation, Inc., 59 Temple\\r\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package personalize\\r\\n *\\/\\r\\n\\/**\\r\\n * MODx Personalize Snippet\\r\\n *\\r\\n *\\r\\n * @package personalize\\r\\n *\\r\\n * Properties\\r\\n *\\r\\n *    @property yesChunk string (REQUIRED) Name of chunk or\\r\\n *        inline HTML to show for LOGGED-in users\\r\\n *\\r\\n *    @property noChunk string (optional) Name of chunk or\\r\\n *        inline HTML to show for NOT logged-in users\\r\\n *\\r\\n *    @property ph string (optional) Placeholder for placing\\r\\n *        the username\\r\\n *        ATTENTION!: ph placeholder will *not* be set in noChunk!\\r\\n *\\r\\n *    @property fullName boolean (optional) Use full name\\r\\n *        instead of username in placeholder\\r\\n *\\r\\n *    @property ifIds string (optional) comma separated \\r\\n *        list of users ids; yesChunk will only be shown\\r\\n *        to users in the list\\r\\n *\\r\\n *    @property allowedGroups string (optional) comma separated \\r\\n *        list of allowed groups; yesChunk will only only shows \\r\\n *        users are in one of these groups\\r\\n *\\r\\n *    @property context (optional) context the user must be\\r\\n *        logged in to to see the yesChunk; defaults to\\r\\n *        current context.\\r\\n *\\r\\n *\\r\\n *\\/\\r\\n\\/* Personalize Snippet for Revolution *\\/\\r\\n\\r\\n\\/* ::::::::::::::::::::::::::::::::::::::::\\r\\n * Snippet Name: Personalize\\r\\n * Short Desc: returns a chunk if the user is logged in, otherwise calls another\\r\\n *::::::::::::::::::::::::::::::::::::::::\\r\\n * Description:\\r\\n * Checks to see if users are logged in and displays yesChunk if the user\\r\\n * is logged or noChunk if user is not logged. Insert only the chunk name as\\r\\n * param, without any tags. Can use a placeholder to output the username.\\r\\n *\\r\\n * TESTED: can be used more than once per page.\\r\\n * TESTED: chunks can contain snippets.\\r\\n *\\r\\n * Example Usage:\\r\\n *\\r\\n *    [[!Personalize?\\r\\n *        &yesChunk=`HelloUser`\\r\\n *         &noChunk=`Register`\\r\\n *         &ph=`name`\\r\\n *     ]]\\r\\n *\\r\\n * Create Chunks named HelloUser and Register, the first will be\\r\\n * shown to a user logged on in the current context,\\r\\n * the second to other users.\\r\\n *\\r\\n * ADDED in 3.3.1 by Vasia123:\\r\\n *    \\r\\n *    1. &noChunk=`@CODE:<b>Please login!<\\/b>` - inline snippets\\r\\n *    2. &ifIds=`1,3` - additional check for users ids. yesChunk will\\r\\n *         only be shown to logged-in users in the list.\\r\\n *    \\r\\n * ADDED in 3.6.0 by Vasia123:\\r\\n *    \\r\\n *    1. &allowedGroups=`Editor,Administrator` - check if user is\\r\\n *       in any allowed group\\r\\n *    \\r\\n *    \\r\\n * Placeholder [[+name]] will show the user\'s name in the yesChunk or\\r\\n * elsewhere on the page.\\r\\n *\\r\\n *\\r\\n *:::::::::::::::::::::::::::::::::::::::: *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $profile modUserProfile *\\/\\r\\n\\r\\n\\/* Prepare params and variables *\\/\\r\\n$output = \'\';\\r\\n$sp =& $scriptProperties;\\r\\n\\r\\n$yesChunk = $modx->getOption(\'yesChunk\',$sp, null);\\r\\n$noChunk = $modx->getOption(\'noChunk\',$scriptProperties, null);\\r\\n$fullName = $modx->getOption(\'fullName\', $sp, null);\\r\\n$firstName = $modx->getOption(\'firstName\', $sp, null);\\r\\n$ph = $modx->getOption(\'ph\',$sp, null);\\r\\n$ifIds = $modx->getOption(\'ifIds\',$sp, null);\\r\\n$allowedGroups = $modx->getOption(\'allowedGroups\',$sp, null);\\r\\n$context = $modx->getOption(\'context\', $sp, $modx->context->get(\'key\') );\\r\\n\\r\\nif( !empty ($fullName) ) {\\r\\n    $profile = $modx->user->getOne(\'Profile\');\\r\\n}\\r\\n\\r\\n\\/* check if user logged in *\\/\\r\\n$is_logged_in = $modx->user->hasSessionContext($context);\\r\\n\\r\\n\\/* Set $ifIds to true if user id is allowed or ifIds is not set *\\/\\r\\n$ifIds = array_filter(array_map(\'trim\',explode(\',\',$ifIds)));\\r\\n$ifIds = (!empty($ifIds)) ? in_array($modx->user->get(\'id\'), $ifIds) : true;\\r\\n\\r\\n\\/\\/ Set $groups to true is use in in allowed group or $groups is not set\\r\\n$groups = array_filter(array_map(\'trim\',explode(\',\',$allowedGroups)));\\r\\nif (!empty($groups)) {\\r\\n    $inGroups = false;\\r\\n    foreach($groups as $group) {\\r\\n        if ($modx->user->isMember($group)) $inGroups = true;\\r\\n    }\\r\\n} else {\\r\\n    $inGroups = true;\\r\\n}\\r\\n\\r\\n\\/* Do the work *\\/\\r\\nif ($is_logged_in && $ifIds && $inGroups) {\\r\\n    if (preg_match(\'\\/^@CODE:\\/\',$yesChunk)) {\\r\\n        $output =  substr($yesChunk, 6);\\r\\n    } else {\\r\\n        $output =  $modx->getChunk($yesChunk, $scriptProperties);\\r\\n    }\\r\\n    if (! empty($ph)) {\\r\\n        if ($fullName && $profile) {\\r\\n            $name = trim($profile->get(\'fullname\'));\\r\\n        } elseif ($firstName && $profile) {\\r\\n            $full = trim($profile->get(\'fullname\'));\\r\\n            $pos = strpos($full, \' \');\\r\\n            $name = ($pos === false) ? $full : substr($full, 0, $pos);\\r\\n        } else {\\r\\n            $name = $modx->user->get(\'username\');\\r\\n        }\\r\\n        $modx->setPlaceholder($ph, $name);\\r\\n    }\\r\\n} elseif( !empty ($noChunk) ) {\\r\\n    if (preg_match(\'\\/^@CODE:\\/\',$noChunk)) {\\r\\n        $output =  substr($noChunk, 6);\\r\\n    } else {\\r\\n        $output =  $modx->getChunk($noChunk);\\r\\n    }\\r\\n}\\r\\nreturn empty($output)? \'\': $output;","locked":0,"properties":"a:6:{s:8:\\"yesChunk\\";a:7:{s:4:\\"name\\";s:8:\\"yesChunk\\";s:4:\\"desc\\";s:25:\\"personalize_yeschunk_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"noChunk\\";a:7:{s:4:\\"name\\";s:7:\\"noChunk\\";s:4:\\"desc\\";s:24:\\"personalize_nochunk_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:2:\\"ph\\";a:7:{s:4:\\"name\\";s:2:\\"ph\\";s:4:\\"desc\\";s:19:\\"personalize_ph_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fullName\\";a:7:{s:4:\\"name\\";s:8:\\"fullName\\";s:4:\\"desc\\";s:25:\\"personalize_fullname_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"firstName\\";a:7:{s:4:\\"name\\";s:9:\\"firstName\\";s:4:\\"desc\\";s:26:\\"personalize_firstname_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"ifIds\\";a:7:{s:4:\\"name\\";s:5:\\"ifIds\\";s:4:\\"desc\\";s:22:\\"personalize_ifIds_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:22:\\"personalize:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\r\\n * Personalize snippet for MODx Revolution\\r\\n *\\r\\n * Personalize is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Personalize is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Personalize; if not, write to the Free Software Foundation, Inc., 59 Temple\\r\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package personalize\\r\\n *\\/\\r\\n\\/**\\r\\n * MODx Personalize Snippet\\r\\n *\\r\\n *\\r\\n * @package personalize\\r\\n *\\r\\n * Properties\\r\\n *\\r\\n *    @property yesChunk string (REQUIRED) Name of chunk or\\r\\n *        inline HTML to show for LOGGED-in users\\r\\n *\\r\\n *    @property noChunk string (optional) Name of chunk or\\r\\n *        inline HTML to show for NOT logged-in users\\r\\n *\\r\\n *    @property ph string (optional) Placeholder for placing\\r\\n *        the username\\r\\n *        ATTENTION!: ph placeholder will *not* be set in noChunk!\\r\\n *\\r\\n *    @property fullName boolean (optional) Use full name\\r\\n *        instead of username in placeholder\\r\\n *\\r\\n *    @property ifIds string (optional) comma separated \\r\\n *        list of users ids; yesChunk will only be shown\\r\\n *        to users in the list\\r\\n *\\r\\n *    @property allowedGroups string (optional) comma separated \\r\\n *        list of allowed groups; yesChunk will only only shows \\r\\n *        users are in one of these groups\\r\\n *\\r\\n *    @property context (optional) context the user must be\\r\\n *        logged in to to see the yesChunk; defaults to\\r\\n *        current context.\\r\\n *\\r\\n *\\r\\n *\\/\\r\\n\\/* Personalize Snippet for Revolution *\\/\\r\\n\\r\\n\\/* ::::::::::::::::::::::::::::::::::::::::\\r\\n * Snippet Name: Personalize\\r\\n * Short Desc: returns a chunk if the user is logged in, otherwise calls another\\r\\n *::::::::::::::::::::::::::::::::::::::::\\r\\n * Description:\\r\\n * Checks to see if users are logged in and displays yesChunk if the user\\r\\n * is logged or noChunk if user is not logged. Insert only the chunk name as\\r\\n * param, without any tags. Can use a placeholder to output the username.\\r\\n *\\r\\n * TESTED: can be used more than once per page.\\r\\n * TESTED: chunks can contain snippets.\\r\\n *\\r\\n * Example Usage:\\r\\n *\\r\\n *    [[!Personalize?\\r\\n *        &yesChunk=`HelloUser`\\r\\n *         &noChunk=`Register`\\r\\n *         &ph=`name`\\r\\n *     ]]\\r\\n *\\r\\n * Create Chunks named HelloUser and Register, the first will be\\r\\n * shown to a user logged on in the current context,\\r\\n * the second to other users.\\r\\n *\\r\\n * ADDED in 3.3.1 by Vasia123:\\r\\n *    \\r\\n *    1. &noChunk=`@CODE:<b>Please login!<\\/b>` - inline snippets\\r\\n *    2. &ifIds=`1,3` - additional check for users ids. yesChunk will\\r\\n *         only be shown to logged-in users in the list.\\r\\n *    \\r\\n * ADDED in 3.6.0 by Vasia123:\\r\\n *    \\r\\n *    1. &allowedGroups=`Editor,Administrator` - check if user is\\r\\n *       in any allowed group\\r\\n *    \\r\\n *    \\r\\n * Placeholder [[+name]] will show the user\'s name in the yesChunk or\\r\\n * elsewhere on the page.\\r\\n *\\r\\n *\\r\\n *:::::::::::::::::::::::::::::::::::::::: *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $profile modUserProfile *\\/\\r\\n\\r\\n\\/* Prepare params and variables *\\/\\r\\n$output = \'\';\\r\\n$sp =& $scriptProperties;\\r\\n\\r\\n$yesChunk = $modx->getOption(\'yesChunk\',$sp, null);\\r\\n$noChunk = $modx->getOption(\'noChunk\',$scriptProperties, null);\\r\\n$fullName = $modx->getOption(\'fullName\', $sp, null);\\r\\n$firstName = $modx->getOption(\'firstName\', $sp, null);\\r\\n$ph = $modx->getOption(\'ph\',$sp, null);\\r\\n$ifIds = $modx->getOption(\'ifIds\',$sp, null);\\r\\n$allowedGroups = $modx->getOption(\'allowedGroups\',$sp, null);\\r\\n$context = $modx->getOption(\'context\', $sp, $modx->context->get(\'key\') );\\r\\n\\r\\nif( !empty ($fullName) ) {\\r\\n    $profile = $modx->user->getOne(\'Profile\');\\r\\n}\\r\\n\\r\\n\\/* check if user logged in *\\/\\r\\n$is_logged_in = $modx->user->hasSessionContext($context);\\r\\n\\r\\n\\/* Set $ifIds to true if user id is allowed or ifIds is not set *\\/\\r\\n$ifIds = array_filter(array_map(\'trim\',explode(\',\',$ifIds)));\\r\\n$ifIds = (!empty($ifIds)) ? in_array($modx->user->get(\'id\'), $ifIds) : true;\\r\\n\\r\\n\\/\\/ Set $groups to true is use in in allowed group or $groups is not set\\r\\n$groups = array_filter(array_map(\'trim\',explode(\',\',$allowedGroups)));\\r\\nif (!empty($groups)) {\\r\\n    $inGroups = false;\\r\\n    foreach($groups as $group) {\\r\\n        if ($modx->user->isMember($group)) $inGroups = true;\\r\\n    }\\r\\n} else {\\r\\n    $inGroups = true;\\r\\n}\\r\\n\\r\\n\\/* Do the work *\\/\\r\\nif ($is_logged_in && $ifIds && $inGroups) {\\r\\n    if (preg_match(\'\\/^@CODE:\\/\',$yesChunk)) {\\r\\n        $output =  substr($yesChunk, 6);\\r\\n    } else {\\r\\n        $output =  $modx->getChunk($yesChunk, $scriptProperties);\\r\\n    }\\r\\n    if (! empty($ph)) {\\r\\n        if ($fullName && $profile) {\\r\\n            $name = trim($profile->get(\'fullname\'));\\r\\n        } elseif ($firstName && $profile) {\\r\\n            $full = trim($profile->get(\'fullname\'));\\r\\n            $pos = strpos($full, \' \');\\r\\n            $name = ($pos === false) ? $full : substr($full, 0, $pos);\\r\\n        } else {\\r\\n            $name = $modx->user->get(\'username\');\\r\\n        }\\r\\n        $modx->setPlaceholder($ph, $name);\\r\\n    }\\r\\n} elseif( !empty ($noChunk) ) {\\r\\n    if (preg_match(\'\\/^@CODE:\\/\',$noChunk)) {\\r\\n        $output =  substr($noChunk, 6);\\r\\n    } else {\\r\\n        $output =  $modx->getChunk($noChunk);\\r\\n    }\\r\\n}\\r\\nreturn empty($output)? \'\': $output;"}',
        'guid' => '8e16968da6e7722830e1f56551382fd6',
        'native_key' => 0,
        'signature' => 'fc3c39fce6f8dbea295271752e6180ac',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'personalize',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"personalize-3.7.0-pl\\/modCategory\\/79aed84547b8e7c5eb0850587d3defeb\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"personalize"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '98692dd9fbc9eea4b26e54062b13b9ca',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '79aed84547b8e7c5eb0850587d3defeb',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"personalize"}',
);